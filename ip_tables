#Block NULL packets
$sudo iptables -A INPUT -p tcp --tcp-flags ALL NONE -j DROP
echo "blocking null packets..."
#Block XMAS packets )
$sudo iptables -A INPUT -p tcp --tcp-flags ALL ALL -j DROP
$sudo iptables -A INPUT -p tcp --tcp-flags ALL FIN,PSH,URG -j DROP
echo "blocking xmas packets..."
#Prevent Sockstress attack
$sudo iptables -A INPUT -p tcp --dport 80 -m state --state NEW -m recent --set
$sudo iptables -A INPUT -p tcp --dport 80 -m state --state NEW -m recent --update --seconds 2 --
hitcount 4 -j DROP
echo "blocking sockstress attack..."
#Sloloris defense
$sudo iptables -I INPUT -p tcp --dport 80 -m connlimit --connlimit-above 20 --connlimit-mask 30 -
j DROP
echo "sloloris defense..."
#RST flood prevention
$sudo iptables -A INPUT -p tcp --tcp-flags RST RST -j DROP
echo "rst flood prevention..."
#SYN flood prevention
$sudo iptables -A INPUT -p tcp ! --syn -m state --state NEW -j DROP
echo "syn flood prevention..."
#Prevent DDoS attacks by limiting connections
$sudo iptables -A INPUT -s client1 -p tcp -m multiport --dports 80,22,443 -m limit --limit 2/s -j
ACCEPT
$sudo iptables -A OUTPUT -d client1 -p tcp -m multiport --dports 80,22,443 -m state --state
RELATED,ESTABLISHED -j ACCEPT
$sudo iptables -A INPUT -s client2 -p tcp -m multiport --dports 80,22,443 -m limit --limit 2/s -j
ACCEPT
$sudo iptables -A OUTPUT -d client2 -p tcp -m multiport --dports 80,22,443 -m state --state
RELATED,ESTABLISHED -j ACCEPT
$sudo iptables -A INPUT -s client3 -p tcp -m multiport --dports 80,22,443 -m limit --limit 2/s -j
ACCEPT
$sudo iptables -A OUTPUT -d client3 -p tcp -m multiport --dports 80,22,443 -m state --state
RELATED,ESTABLISHED -j ACCEPT
echo "blocking the clients..."
#Note- do we need to accept RELATED,ESTABLISHED connections on the input?
# OTHER CONNECTIONS
# -----------------
# *IGNORE* all other traffic
$sudo iptables -A INPUT -i $ETH -j DROP
$sudo iptables -A OUTPUT -o $ETH -j DROP
$sudo iptables -A INPUT -i $ETH -s gateway -j DROP
